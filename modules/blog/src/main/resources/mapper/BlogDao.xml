<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.blog.dao.BlogDao">

    <resultMap id="BlogMap" type="com.spring.common.entity.po.Blog">
        <!--@Table my_blog-->
        <id property="blogId" column="blog_id" jdbcType="INTEGER"/>
        <result property="blogTitle" column="blog_title" jdbcType="VARCHAR"/>
        <result property="blogBody" column="blog_body" jdbcType="VARCHAR"/>
        <result property="blogImg" column="blog_img" jdbcType="VARCHAR"/>
        <result property="blogTime" column="blog_time" jdbcType="TIMESTAMP"/>
        <result property="blogUpdateTime" column="blog_update_time" jdbcType="TIMESTAMP"/>
        <result property="blogCollect" column="blog_collect" jdbcType="INTEGER"/>
        <result property="blogView" column="blog_view" jdbcType="INTEGER"/>
        <result property="blogLike" column="blog_like" jdbcType="INTEGER"/>
        <result property="blogComment" column="blog_comment" jdbcType="INTEGER"/>
        <result property="blogState" column="blog_state" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="BlogUserMap" type="com.spring.common.entity.vo.BlogVo" extends="BlogMap">
        <association property="user" column="user_id" select="getUser"/>
        <collection property="blogTagList" column="blog_id" select="getBlogTag"/>
    </resultMap>

    <resultMap id="BlogTagMap" type="com.spring.common.entity.vo.BlogTagVo"
               extends="com.spring.blog.dao.BlogTagDao.BlogTagMap">
        <association property="tag" column="tag_id" select="getTag"/>
    </resultMap>

    <select id="selectByBlogId" resultMap="BlogUserMap" parameterType="integer">
        SELECT blog_id,
               blog_title,
               blog_body,
               blog_img,
               blog_time,
               blog_update_time,
               blog_collect,
               blog_view,
               blog_like,
               blog_comment,
               blog_state,
               user_id
        FROM my_blog
        WHERE blog_state = 1
          AND blog_id = #{blogId}
    </select>

    <select id="selectByUserId" resultMap="BlogUserMap" parameterType="integer">
        SELECT blog_id,
               blog_title,
               blog_body,
               blog_img,
               blog_time,
               blog_update_time,
               blog_collect,
               blog_view,
               blog_like,
               blog_comment,
               blog_state,
               user_id
        FROM my_blog
        WHERE blog_state = 1
          AND user_id = #{userId}
        ORDER BY blog_id DESC
    </select>

    <select id="selectByTagId" resultMap="BlogUserMap" parameterType="integer">
        select blog_id,
               blog_title,
               blog_body,
               blog_img,
               blog_time,
               blog_update_time,
               blog_collect,
               blog_view,
               blog_like,
               blog_comment,
               blog_state,
               user_id
        from my_blog
        where blog_state = 1
          and blog_id in (select mbt.blog_id from my_blog_tag mbt where mbt.tag_id = #{tagId})
        ORDER BY blog_id DESC
    </select>

    <select id="selectNormal" resultMap="BlogUserMap">
        SELECT blog_id,
               blog_title,
               blog_body,
               blog_img,
               blog_time,
               blog_update_time,
               blog_collect,
               blog_view,
               blog_like,
               blog_comment,
               blog_state,
               user_id
        FROM my_blog
        WHERE blog_state = 1
    </select>

    <select id="selectException" resultMap="BlogUserMap">
        SELECT blog_id,
               blog_title,
               blog_body,
               blog_img,
               blog_time,
               blog_update_time,
               blog_collect,
               blog_view,
               blog_like,
               blog_comment,
               blog_state,
               user_id
        FROM my_blog
        WHERE blog_state = 0
    </select>

    <select id="selectHot" resultMap="BlogUserMap">
        SELECT blog_id,
               blog_title,
               blog_body,
               blog_img,
               blog_time,
               blog_update_time,
               blog_collect,
               blog_view,
               blog_like,
               blog_comment,
               blog_state,
               user_id
        FROM my_blog
        WHERE blog_state = 1
        ORDER BY blog_view DESC
        LIMIT 20
    </select>

    <select id="selectNew" resultMap="BlogUserMap">
        SELECT blog_id,
               blog_title,
               blog_body,
               blog_img,
               blog_time,
               blog_update_time,
               blog_collect,
               blog_view,
               blog_like,
               blog_comment,
               blog_state,
               user_id
        FROM my_blog
        WHERE blog_state = 1
        ORDER BY blog_id DESC
        LIMIT 20
    </select>

    <select id="selectNewByUserId" resultType="com.spring.common.entity.po.Blog">
        select blog_id, blog_title, blog_img, blog_time
        from my_blog
        where user_id = #{userId}
          and blog_state = 1
        order by blog_id desc
        limit 10
    </select>

    <select id="selectAllByParam" resultMap="BlogUserMap">
        SELECT blog_id,
               blog_title,
               blog_body,
               blog_img,
               blog_time,
               blog_update_time,
               blog_collect,
               blog_view,
               blog_like,
               blog_comment,
               blog_state,
               user_id
        FROM my_blog
        WHERE match(blog_title) against(CONCAT('*', #{param}, '*') in boolean mode)
          and blog_state = 1
        ORDER BY blog_id DESC
    </select>


    <!---->
    <select id="getBlogTag" resultMap="BlogTagMap">
        select distinct blog_tag_id, blog_id, tag_id
        from my_blog_tag
        where blog_id = #{blog_id}
    </select>

    <select id="getUser" resultMap="com.spring.blog.dao.UserDao.UserMap">
        select user_id, user_name, user_img
        from my_user
        where user_id = #{user_id}
    </select>

    <select id="getTag" resultMap="com.spring.blog.dao.TagDao.TagMap">
        select tag_id, tag_name
        from my_tag
        where tag_id = #{tag_id}
    </select>

    <select id="getBlogCount" resultType="java.lang.Integer">
        select count(blog_id)
        from my_blog
        where user_id = #{userId}
          and blog_state = 1
    </select>


</mapper>